// We require the Hardhat Runtime Environment explicitly here. This is optional
// but useful for running the script in a standalone fashion through `node <script>`.
//
// You can also run a script with `npx hardhat run <script>`. If you do that, Hardhat
// will compile your contracts, add the Hardhat Runtime Environment's members to the
// global scope, and execute the script.
require("@nomiclabs/hardhat-web3");

const hre = require("hardhat");
const ethers = require("ethers");
const tickers = [
  'USDC',
  'PURR',
  'TEST',
  'JPL ',
  'BREAD',
  'P',
  'KOGU',
  'TestPascal1',
  'KORILA',
  'werfqwer',
  'trwe',
  'CHUTORO',
  'OTORO',
  'ODDISH',
  'TEST0',
  'TEST1',
  'TEST2',
  'PACOU',
  'TEST3',
  'TEST4',
  'PACOU0',
  'PKL',
  'DDD',
  'TSRSFG',
  'TT',
  'TT0',
  'TT1',
  'QQ',
  'TSRSFG0',
  'TSRSFG1',
  'TSRSFGGGG',
  'TSRSFGQQQQQ',
  'QQ0',
  'QQ1',
  'WOOF',
  'WOOF0',
  'WOOF1',
  'QQ2',
  'MYUNG',
  'MYUNG0',
  'TEST5',
  'MYUNG1',
  'MYUNG2',
  'MYUNG3',
  'HOWL',
  'YY',
  'TEST6',
  'TEST7',
  'Z',
  'Y',
  'ONE',
  'HEFFE',
  'YYYY',
  'TEST8',
  'QUIZ',
  'EXAM',
  'TEST9',
  'S',
  'TANG',
  'DOUDOU',
  'JEFF',
  'MOGG',
  'PURR0',
  'PURR1',
  'PURR2',
  'TEST10',
  'TRADE',
  'USDC2',
  'TEST11',
  'BTC',
  'AA',
  'LOLO',
  'CABAL',
  'LOLO0',
  'LOLO1',
  'LOLO2',
  'CABANL',
  'LOKO',
  'LIKOKO',
  'SCHIZO',
  'EMO',
  'KUMO',
  'BLOCK',
  'BLOKE',
  'BLOKED',
  'BLOKED0',
  'BLOKED1',
  'BLOKED2',
  'BLOKED3',
  'BLOKED4',
  'CATLEO',
  'BLOKED5',
  'MJ',
  'KJ',
  'AA0',
  'AB',
  'AC',
  'AD',
  'AE',
  'AF',
  'AG',
  'JAYZ',
  'BIGGIE',
  'GGA',
  'AFFF',
  'AFFF0',
  'AFFFF',
  'AFFFF0',
  'AGGGG',
  'RR',
  'AAAA',
  'AFF',
  'AFFF1',
  'LLL',
  'BRENT',
  'SKETIT',
  'AAAF',
  'DOGGY',
  'AVG',
  'SLEEP',
  'WHISA',
  'AAAAA',
  'FFA',
  'AF0',
  'FF',
  'FQ',
  'RANDOM',
  'OKGO',
  'OKGOO',
  'FQT',
  'FD',
  'GENES',
  'TAT',
  'TATA',
  'TATAT',
  'TTT',
  'FT',
  'FTTT',
  'TEWT',
  'TEWTT',
  'TWTT',
  'OMO',
  'NFS',
  'HUSD',
  'YUAN',
  'FAKER',
  'ILI',
  'FAKOR',
  'XULI',
  'ALERT',
  'ALERTT',
  'POORR',
  'OLMERT',
  'PEPITO',
  'ZERKER',
  'ANOTES',
  'FIX',
  'PENGUN',
  'TESTIN',
  'HFUN',
  'SPIRIT',
  'STEPHY',
  'KNOWRR',
  'KNOWR',
  'KNOW',
  'BRAIN',
  'KNOWER',
  'MANLET',
  'PUAR',
  'HAHA',
  'TESTI',
  'DING',
  'NFSW',
  'TABLE',
  'YUKI',
  'ZUCINI',
  'CHOCO',
  'HYHY',
  'LITTER',
  'ANON',
  'HFUNN',
  'FAKUR',
  'BIKE',
  'HANANA',
  'BOTTLE',
  'WASSIE',
  'WACKO',
  'PINGU',
  'PIUPIU',
  'RPINGU',
  'Q',
  'QW',
  'FTEST',
  'WSAD',
  'QWERT',
  'ZXCV',
  'TTOKEN',
  'PINGUT',
  'WOOOOF',
  'QWERTY',
  'WOOOF',
  'HFUNX',
  'HFUNY',
  'HFUNZ',
  'HFUNO',
  'HFUNR',
  'HFUNL',
  'HFUNW',
  'QWERTX',
  'XYZXYZ',
  'ABCZXY',
  'HGUN',
  'XYZTWO',
  'HKUN',
  'HJUN',
  'HYUN',
  'TESTY',
  'PINGUP',
  'ROCKET',
  'SMALL',
  'POILO',
  'KILOK',
  'LICK',
  'LIQ',
  'LIM',
  'FINAL',
  'TEWSTT',
  'GETIT',
  'HEHEXD',
  'SPOOT',
  'PLZWOR',
  'GGNORE',
  'IDKIDK',
  'IDKWAT',
  'NOFUN',
  'FUNNY',
  'TESTA',
  'WOKOK',
  'IDKNNN',
  'MAXXX',
  'DOGGG',
  'TOTY',
  'BARK',
  'BARKY',
  'WOOFY',
  'SECRET',
  'WAGMI',
  'TESTB',
  'TESTC',
  'TESTD',
  'MEEPIT',
  'FEEPIT',
  'BREAK',
  'BRK',
  'GORILA',
  'GORILB',
  'BK',
  'TITI',
  'FOOW',
  'ASDASD',
  'DFGDF',
  'ZXCVB',
  'ZXC',
  'VBN',
  'HANA',
  'ETF',
  'SECOND',
  'WONK',
  'WERT',
  'DFT',
  'HEHE',
  'CARPET',
  'BOOOOO',
  'SOBACK',
  'BBB',
  'MEVI',
  'MEV',
  'SUBWAY',
  'DOSFA',
  'HUEHUE',
  'BREK',
  'BREAKK',
  'ARAM',
  'MROW',
  'ASDD',
  'BREKK',
  'TMTM',
  'MEW',
  'MRRRRR',
  'GASTE',
  'GASAU',
  'RAWR',
  'LAUNCH',
  'SHU',
  'SKEM',
  'SKEEM',
  'PEACE',
  'OHHHHH',
  'WAOW',
  'GMI',
  'PORCHE',
  'FAKE',
  'GHJ',
  'AKCZ',
  'BNM',
  'JK',
  'TYU',
  'SPOCK',
  'POOPY',
  'RUFF',
  'TDAWG',
  'TOUGH',
  'BIRB',
  'POOPIE',
  'GUMMI',
  'TOKEN',
  'YAWN',
  'KITTY',
  'STRESS',
  'NGMI',
  'OMNISC',
  'YAKW',
  'ABIFEJ',
  'LIOUL',
  'CHOR',
  'WAHHHH',
  'WAHHH',
  'BNMBNM',
  'YUIYUI',
  'GHNGHN',
  'EDC',
  'QWSQWS',
  'TIRED',
  'DFGFGH',
  'PERMI',
  'PERMA',
  'PERMO',
  'XZXCX',
  'PERMT',
  'TYVM',
  'TYSM',
  'PERMK',
  'PLSENJ',
  'MANLEK',
  'AUCK',
  'FKKCAZ',
  'REST',
  'ERFGTG',
  'HIHI',
  'AZEBDA',
  'SPY',
  'BAA',
  'ONDOEB',
  'FIVE',
  'TESTT',
  'BEANS',
  'NEW',
  'AERAIO',
  'IADOW',
  'COCK',
  'BIG',
  'DON',
  'LOOP',
  'GASKL',
  'OKAD',
  'GENS',
  'IOIOIO',
  'IOOX',
  'X',
  'NOGGY',
  'FAG',
  'MOONY',
  'EXXONE',
  'HEY',
  'NOGAS',
  'YOLO',
  'EEEEE',
  'TOTORO',
  'AWA',
  'TESTER',
  'GRRR',
  'AHAHA',
  'WEEB',
  'KUNGFU',
  'USA',
  'JAPAN',
  'LIQD',
  'LIQO',
  'IOKOIO',
  'OKILOK',
  'ALERTD',
  'SIX',
  'RRR',
  'LAG',
  'FFS',
  'BOO',
  'GOOSE',
  'BARKK',
  'WHAT',
  'YANMAN',
  'PIMPUM',
  'TST',
  'NOTSIX',
  'RIPSIX',
  'TESTHL',
  'ADIUB',
  'AAAAAA',
  'SIGH',
  'XIKK',
  'HELLO',
  'DOVED',
  'ANIME',
  'JAPANN',
  'A',
  'YARE',
  'WAKA',
  'ANDHHH',
  'ANDGGG',
  'AAAASA',
  'ABCHKT',
  'ABDEDE',
  'ABDEDF',
  'MANI',
  'NAME',
  'ENOM',
  'ABDEDW',
  'MARG',
  'AUCTIO',
  'MURAHH',
  'BAAAH',
  'ANGRY',
  'DOPEY',
  'BAAH',
  'EEPIT',
  'WEEPIT',
  'IPOPO',
  'AKAKAK',
  'DOGGE',
  'TESTU',
  'WEWEW',
  'TESTES',
  'WESTES',
  'PEZES',
  'SLOW',
  'POOPYY',
  'WAGAGA',
  'LAMPAH',
  'LEE',
  'OKAKA',
  'KJADAJ',
  'ADASDA',
  'OIOIOK',
  'IAODI',
  'ADADA',
  'LANJS',
  'KEMPO',
  'OOPSZ',
  'UMBRA',
  'TANI',
  'OLIKO',
  'ISAKK',
  'OIAIO',
  'OAIAO',
  'OKALAL',
  'AKIKI',
  'BANAKA',
  'IKOALO',
  'OAKLA',
  'OKILOL',
  'FDSD',
  'SASAA',
  'UUUUU',
  'HADSA',
  'NOONEE',
  'IOALS',
  'POOP',
  'MERRRP',
  'JOOG',
  'SIGMA',
  'DDF',
  'WERWER',
  'BTT',
  'BTTT',
  'REAL',
  'BTTTT',
  'AAA',
  'TMMM',
  'GMMM',
  'FED',
  'TOTO',
  'TATAA',
  'TRUMP',
  'LIGMA',
  'NMERRR',
  'WANT',
  'MILF',
  'GLUCK',
  'MIAOU',
  'TRONK',
  'IBTC',
  'PUNPUN',
  'TIKTOK',
  'SORA',
  'SHREK',
  'CORD',
  'QTHB',
  'BTY',
  'TOOL',
  'PLOT',
  'OKIDO',
  'DEVFU',
  'DEFFU',
  'DASDA',
  'DEKK',
  'DEKSK',
  'PDF',
  'PEPE',
  'MIO',
  'DFDF',
  'CRDF',
  'AZD',
  'ADSSS',
  'KADJA',
  'AKJJ',
  'KAKDS',
  'KOJOL',
  'POPP',
  'ROLAL',
  'KOSAA',
  'SAJDA',
  'NNBNB',
  'ASJNA',
  'ASKJA',
  'NBBN',
  'SKIDI',
  'KALA',
  'FJSJF',
  'ZXNCZ',
  'AGRA',
  'GRAGRA',
  'XZCC',
  'ZXMZ',
  'CGRAO',
  'JONNYM',
  'SUZZ',
  'ROBLOX',
  'ASDAS',
  'LOL',
  'HIGBJH',
  'LKLKL',
  'QUAB',
  'NAB',
  'AGR',
  'AOI',
  'UIOIQ',
  'LKOAD',
  'QIEOQ',
  'DAJKD',
  'IUHIUH',
  'AAARS',
  'ARSARR',
  'FGSFH',
  'TUNA',
  'OKK',
  'DEPLOY',
  'TESTCC',
  'TTTT',
  'TTTTT',
  'XQC',
  'TEASD',
  'YARR',
  'JDSAD',
  'PLS',
  'POINTS',
  'DTEST',
  'TDELTA',
  'CZ',
  'SOUP',
  'YOINK',
  'IAKDL',
  'XULIAN',
  'ARSSY',
  'DDDXCD',
  'YYYQWF',
  'IADOLA',
  'AIQKDA',
  'OALIKO',
  'ADKSA',
  'ZXNM',
  'LADUI',
  'OAIDL',
  'STAKE',
  'ALSTU',
  'ACDRS',
  'ATGAW',
  'ATATAT',
  'ATARW',
  'AAPWF',
  'POTAT',
  'AGAG',
  'ATAWST',
  'ARSARS',
  'F',
  'ASTARS',
  'ARSTGG',
  'ARSV',
  'ARSTG',
  'ARSAR',
  'APTGAR',
  'ARSVV',
  'RSTG',
  'HARU',
  'GRRRR',
  'TEMP',
  'OKALKL',
  'HQPDC',
  'TOPG',
  'MEWTWO',
  'NANANA',
  'TESTH',
  'FAOAI',
  'DEGEN',
  'DGN',
  'DGNRT',
  'TSTSTS',
  'ZZZ',
  'AABABA',
  'WWWW',
  'ZZROT',
  'ZZRRT',
  'VBFR',
  'VBFRS',
  'WAGWAN',
  'ADAR',
  'UASJ',
  'IGGY',
  'GAGAGA',
  'TESTW',
  'TSTS',
  'DFTX',
  'FJKD',
  'BCXR',
  'TSET',
  'GTOK',
  'HAND',
  'YOLOS',
  'VIZ',
  'CQFD',
  'PWND',
  'SSNPZ',
  'MINOU',
  'CMOON',
  'SNPME',
  'DPLY',
  'SBF',
  'AGALU',
  'AGAVE',
  'THIS',
  'FINARU',
  'ADOHZ',
  'FAGGOT',
  'RTSTD',
  'MAGA',
  'ROFL',
  'XDDD',
  'BZZ',
  'ADJOK',
  'AIDOA',
  'CBZ',
  'CBZZ',
  'CBZZZZ',
  'CZCZZ',
  'SADGE',
  'DUMPER',
  'BOZO',
  'CBBBBZ',
  'CCCCBC',
  'CBBBA',
  'CFCCC',
  'PLZCZZ',
  'PLZCZ',
  'HELPME',
  'HELPCZ',
  'CZLOL',
  'JEFPLS',
  'TESTLO',
  'PLSDD',
  'PLZCS',
  'CZLPL',
  'CZTT',
  'CZLAST',
  'FINCZ',
  'CZA',
  'ASARS',
  'TRSST',
  'AAARST',
  'XCC',
  'KC',
  'AWATAR',
  'ATARST',
  'GRAA',
  'DADA',
  'CKJK',
  'QWPRR',
  'ARSARY',
  'RACO',
  'TNAYV',
  'DMAPE',
  'ADOWL',
  'DUNAW',
  'ANTES',
  'DRAKE',
  'OADKL',
  'IADLH',
  'JFIAUD',
  'ALPHA',
  'GATE',
  'GATTE',
  'GATTTE',
  'HIKE',
  'HIKKE',
  'TSTT',
  'TBN',
  'TESTYA',
  'OMGOMG',
  'BURRRR',
  'NANA',
  'TESTTT',
  'TEESS',
  'SHICHI',
  'TEEXI',
  'FOXX',
  'OPPSS',
  'POOPS',
  'TTTEE',
  'JUICE',
  'HYLOL',
  'GMEOW',
  'GACCI',
  'XUI',
  'SSSSSS',
  'HY',
  'T',
  'YTFYTF',
  'DFVDFV',
  'TYBG',
  'DEPLO',
  'CR',
  'LIQUID',
  'TESTAR',
  'TESTAW',
  'TEEEEE',
  'OTRAVE',
  'TESTRI',
  'SAJHAD',
  'WASH',
  'WASHER',
  'RABBY',
  'TTST',
  'TTET',
  'RTK',
  'VTLK',
  'TOKFIN',
  'RMD',
  'TBK',
  'DEOPKS',
  'KEVIN',
  'KLM',
  'BIDEN',
  'IBAR',
  'AUTO',
  'NEWSY',
  'ASDF',
  'KEK',
  'DEEZ',
  'SGP',
  'SEC',
  'YEET',
  'FKIT',
  'PLSGOD',
  'BEAN',
  'LGLP',
  'TSDFR',
  'WAAAA',
  'PASARS',
  'FFF',
  'GP',
  'PIPI',
  'SCHILO',
  'IZARD',
  'EVMM',
  'TTDEL',
  'HYDRO',
  'ADNN',
  'POOOO',
  'IHIENT',
  'FARMED',
  'TRDTOK',
  'HISER',
  'BIGPOO',
  'ADELTA',
  'SDFD',
  'YQLFWW',
  'AIYA',
  'BDELTA',
  'GRUMP',
  'GD',
  'CDELTA',
  'DDELTA',
  'HIKKEE',
  'DZAFAZ',
  'CHARM',
  'FLUFFY',
  'CHONK',
  'CHONKY',
  'PEEEPY',
  'EDELTA',
  'MOCK',
  'ABDD',
  'YOOTS',
  'BLEGH',
  'AIDBMC',
  'GATO',
  'KDELTA',
  'TOKENN',
  'GDELTA',
  'YDELTA',
  'HDELTA',
  'UDELTA',
  'BODEN',
  'TESTX',
  'HODL',
  'CARSEA',
  'OKIKI',
  'UPDOWN',
  'PDELTA',
  'GITA',
  'TESSS',
  'OOOOOO',
  'VDELTA',
  'GUNJB',
  'HEIHEI',
  'ZAZA',
  'GIAO',
  'RETARD',
  'HIHIHI',
  'GIAOOO',
  'WESS',
  'WELANN',
  'PANDA',
  'KILL',
  'EDASDS',
  'PANDAA',
  'SEED',
  'VANCE',
  'LOX',
  'TENDY',
  'GUM',
  'OXO',
  'OINK',
  'RDELTA',
  'SHURI',
  'FUCKA',
  'ADHSJ',
  'PUTIN',
  'PICHI',
  'WASA',
  'TOKTOK',
  'TOKTIK',
  'ATOKEN',
  'CTOKEN',
  'ETOKEN',
  'FTOKEN',
  'GTOKEN',
  'HTOKEN',
  'ITOKEN',
  'JTOKEN',
  'KTOKEN',
  'PONZI',
  'SEEDED',
  'BILI',
  'ZERTH',
  'TRY',
  'DASD',
  'YOLOK',
  'NIANW',
  'BEBER',
  'FUNFUN',
  'FMONEY',
  'JOKER',
  'WYB',
  'POP',
  'SAS',
  'COKE',
  'PASTA',
  'AATOKE',
  'BBTOKE',
  'CCTOKE',
  'DDTOKE',
  'EETOKE',
  'FFTOKE',
  'GGTOKE',
  'HHTOKE',
  'IITOKE',
  'JJTOKE',
  'DOG',
  'CUP',
  'YOOT',
  'MOGHO',
  'HAH',
  'MADA',
  'SEEL',
  'TESTXX',
  'MAC',
  'HEIMA',
  'GEIGEI',
  'ZDELTA',
  'OLYMPE',
  'RICH',
  'WOWW',
  'BAMBU',
  'APPET',
  'UIOP',
  'PTPT',
  'REEE',
  'FUCKO',
  'XTESTX',
  'OOPH',
  'RAMEN',
  'WAWA',
  'OKX',
  'BENACE',
  'TDROP',
  'PLEP',
  'ONETUB',
  'ETHER',
  'NUTS',
  'AAATOK',
  'BBBTOK',
  'CCCTOK',
  'DDDTOK',
  'EEETOK',
  'FFFTOK',
  'GGGTOK',
  'HHHTOK',
  'IIITOK',
  'JJJTOK',
  'FRAC',
  'PAPPA',
  'WOWKE',
  'GKOL',
  'WOWPE',
  'ASDAD',
  'FRBC',
  'FRCC',
  'YGHQU',
  'TELS',
  'BBTEST',
  'RIC',
  'GOMOG',
  'MOMOS',
  'THRTUB',
  'TESTTS',
  'FORTUB',
  'TUSD',
  'FRCT',
  'AGAIN',
  'LOUNCH',
  'MOKTOK',
  'ARCHI',
  'MEOW',
  'TESTAA',
  'ADDA',
  'ZYZZ',
  'SOGARI',
  'TESTBB',
  'AARSAI',
  'FIVTUB',
  'KYAK',
  'LIKCA',
  'SPONGE',
  'GUESS',
  'QWQWE',
  'LIJOKO',
  'FIXED',
  'FIKSED',
  'AJOP',
  'GUESNT',
  'FRRR',
  'LPOINT',
  'PAVEL',
  'TARSSS',
  'AKOKO',
  'XYZ',
  'TESTTK',
  'PLSW',
  'TARST',
  'IAHQW',
  'IAHQWW',
  'JAHQWW',
  'DVMLU',
  'MYUNGG',
  'OOM',
  'DVMLAU',
  'DPLAU',
  'TIMMY',
  'VEGETA',
  'RHJK',
  'TTTTTT',
  'CATCOM',
  'CATCAR',
  'CATTWO',
  'MIKI',
  'EDO',
  'HMK',
  'WASHOI',
  'BORROW',
  'CAT',
  'HORDE',
  'BIBOS',
  'SPX',
  'SEEDTT',
  'REALTT',
  'TTIII',
  'MOMO',
  'TESTIV',
  'TESTV',
  'CHKK',
  'ABCDEF',
  'HX',
  'TESTVI',
  'JNZ',
  'COOK',
  'TSTVII',
  'PIDAR',
  'SOKEN',
  'SOKENS',
  'TESTPR',
  'CTB',
  'RPX',
  'COTEST',
  'TESTFI',
  'AMPURR',
  'UWU',
  'HTE',
  'TESTFF',
  'LOS',
  'GOAT',
  'ZIGG',
  'SOLANA',
  'OAIK',
  'KKMAMA',
  'ZOKI',
  'MBX',
  'NEWT',
  'MOR',
  'NEWTT',
  'NEWTPE',
  'SANGE',
  'HALLO',
  'ESTASA',
  'ESTRA',
  'ESTEH',
  'WHALES',
  'BOZOZO',
  'PLMR',
  'KANAMA',
  'POLARI',
  'SPINE',
  'TEEYI',
  'HANDY',
  'PISU',
  'PANAM',
  'TARFE',
  'YURI',
  'FEUSD',
  'STRICT',
  'PLMS',
  'MORT',
  'ELJEFE',
  'PILLS',
  'PADZ',
  'ADADAA',
  'LALAL',
  'FUDFUD',
  'TEESTI',
  'IUME',
  'ZXQJ',
  'ZXQJA',
  'TESTMB',
  'LUNCH',
  'RUPP',
  'FROGGO',
  'GRA',
  'GRAG',
  'XYZA',
  'XYZB',
  'XYZC',
  'XYZD',
  'XYZE',
  'FUCKME',
  'TIGAIE',
  'XYZF',
  'SNIPE',
  'DINGDO',
  'HYPE',
  'TESTIT',
  'WTF',
  'KOL',
  'TSTHYP',
  'DAWG',
  'MUNCH',
  'XYZG',
  'BPOP',
  'XYZH',
  'DITTO',
  'XYZI',
  'WIFNOT',
  'NEWTTT',
  'XYZJ',
  'AMA',
  'HPRO',
  'LAVA',
  'JAKE',
  'SPIKE',
  'MAN',
  'LGBT',
  'MON',
  'CLOWN',
  'UNIT',
  'PERPT',
  'ALOHA',
  'CPOOL',
  'LCAT',
  'DREAM',
  'NOM',
  'SLTEST',
  'YAP',
  'SOVRN',
  'TESTZ',
  'SPOT',
  'NOPE',
  'TRCD',
  'RCDT',
  'GREAT',
  'JOSE',
  'ISLAND',
  'BULBUL',
  'NHYPE',
  'SYRUPA',
  'RCDA',
  'RUN',
  'CCC',
  'BULA',
  'BULB',
  'SNOW',
  'TIME',
  'RCDB',
  'SOVY',
  'TESTSV',
  'BIGER',
  'BULC',
  'SOCAI',
  'GOD',
  'CAMELA',
  'THZG',
  'GOOG',
  'MEGATS',
  'GODT',
  'ORA',
  'CLC',
  'HTTEST',
  'MILK',
  'TIMEE',
  'TESTSL',
  'NIAOB',
  'KKPAPA',
  'MALPAN',
  'SOUV',
  'RCDE',
  'ASTRO',
  'GRAIL',
  'TESTSW',
  'TIMEF',
  'EMIT',
  'RIP',
  'B',
  'MANA',
  'ARSMN',
  'TRUMPP',
  'CTT',
  'PEG',
  'GODTT',
  'VAGUE',
  'LIAM',
  'KOMT',
  'NEURAL',
  'TESTKK',
  'ABC',
  'ABCD',
  'AGRCCC',
  'TESTK',
  'LONE',
  'VXXCD',
  'TZERO',
  'SMOLL',
  'UNREAL',
  'PRFI',
  'PGAY',
  'GARS',
  'JPEG',
  'HAR',
  'QWER',
  'RBNT',
  'TWA',
  'APU',
  'TGWW',
  'ACDC',
  'PWFQ',
  'ACDD',
  'ABPQ',
  'TTTA',
  'TBTC',
  'ENAA',
  'TESTAB',
  'TBTCB',
  'TTAA',
  'HGHG',
  'BENA',
  'BENB',
  'ATWQQ',
  'ALICE',
  'BOB',
  'PRNT',
  'HIPPO',
  'HYDRA',
  'TBTCC',
  'ALITH',
  'CAXYZ',
  'RAWT',
  'LST',
  'ROBERT',
  'UETH',
  'PIP',
  'HAPPY',
  'CTEST',
  'HIP',
  'CHARLI',
  'TSIPHE',
  'PIPT',
  'COOKIE',
  'TSPR',
  'HANAA',
  'MOIJLD',
  'RCXYSF',
  'TUSDE',
  'FUNT',
  'FUNTT',
  'CATBAL',
  'USDXL',
  'TESTAZ',
  'DBR',
  'DANK',
  'FEUSDD',
  'TESTAY',
  'TESTAX',
  'DBRT',
  'TSTIDT',
  'TSPH',
  'TESTAV',
  'TASST',
  'TESTAU',
  'FYUCCH',
  'TESTAT',
  'USDAA',
  'USDAB',
  'RWGKSX',
  'QUANT',
  'ABCDE',
  'USOL',
  'MXFVMO',
  'SOQIKG',
  'ALEX',
  'ONLYUP',
  'EAGEN',
  'TCOOK',
  'SYYQXU',
  'IDTGAX',
  'NAAAAA',
  'WHITE',
  'GBISU',
  'LALATW',
  'KUCING',
  'ZTJZDY',
  'DUSTYY',
  'USDEEE',
  'DDBRR',
  'EAGEN2',
  'ENNA',
  'PEGG',
  'ISLAN2',
  'UFART',
  'MNSPEK',
  'UBITCH',
  'PEGGG',
  'SQXUDU',
  'TPTSD',
  'PRTE',
  'PRTT',
  'SPIKEY',
  'BAPE',
  'BPLUME',
  'PER',
  'RUB',
  'RUBBB',
  'TXYAPJ',
  'UBONK',
  'FRCTB',
  'XVUTAH',
  'FRCTC',
  'LFG',
  'DASH',
  'IDCFPE',
  'FFCHAT',
  'YOMOER',
  'GREATE',
  'TCCVX',
  'ANITAL',
  'USDZZ',
  'UYXEDE',
  'GOLF',
  'CHAM',
  'AXL1',
  'AXL2',
  'AXL3',
  'PUCKY',
  'ISLAN3',
  'XMWBAW',
  'TROY',
  'STHYPE',
  'AXL4',
  'AXL5',
  'AXL6',
  'JUN',
  'UPUMP',
  'CREAM',
  'CC',
  'TESTJO',
  'XYPH',
  'STEAK',
  'TACO',
  'STLOOP',
  'MOKOKO'
]
const {
  time, reset
} = require("@nomicfoundation/hardhat-toolbox/network-helpers");
const {TOKEN_ABI, BC_ABI} = require("../../test/constants.js")


async function main() {
  await hre.ethers.provider.send("evm_setNextBlockTimestamp", [Math.floor(new Date()/1000)]);
  const SPOT_PX_PRECOMPILE_ADDRESS = "0x0000000000000000000000000000000000000808";
  // 1. Deploy an instance of `SpotMock` as you would any other contract.
  const SpotMock = await hre.ethers.getContractFactory("Spot_Precompile");
  const spotMock = await SpotMock.deploy();
  await spotMock.waitForDeployment()
  // 2. Cache the bytecode that was just deployed.
  const code = await hre.ethers.provider.getCode(await spotMock.getAddress())
  // 3. Use `hardhat_setCode` to set the bytecode at `SPOT_PX_PRECOMPILE_ADDRESS`
  await hre.ethers.provider.send("anvil_setCode", [SPOT_PX_PRECOMPILE_ADDRESS, code]);

  const signers = await hre.ethers.getSigners()
  const owner = new ethers.Wallet('', await hre.ethers.provider)
  const ownerAddress = await owner.getAddress()

  const signer = new ethers.Wallet('', await hre.ethers.provider)
  let txn = await signers[8].sendTransaction({to: await signer.getAddress(), value: ethers.parseEther('1000')})
  await txn.wait()
  for(let i =0; i<65; i++) {
      txn = await signer.sendTransaction({to: await signer.getAddress(), value: ethers.parseEther('1')})
  }
  const len = tickers.length
  let deployTickers = []
  if (len > 45) {
    for(let i=0; i<45;i++) {
      deployTickers.push(tickers[i])
    }
  } else {
    deployTickers = tickers
  }
  const Factory = await hre.ethers.getContractFactory("Factory", owner);
  const Router = await hre.ethers.getContractFactory("Router", owner);
  const PrecompileCaller = await hre.ethers.getContractFactory("PrecompileCaller", owner);
  const factory = await Factory.connect(owner).deploy(deployTickers, ownerAddress, ownerAddress, ownerAddress)
  await factory.waitForDeployment()
  console.log(await factory.getAddress())
  const router = await Router.connect(owner).deploy()
  await router.waitForDeployment()
  console.log(await router.getAddress())
  const batchSize = 125;
  const startIndex = 45;
  let deployed = false
  for (let i = startIndex; i < tickers.length; i += batchSize) {
    const batch = tickers.slice(i, i + batchSize);
    console.log(`Adding tickers ${i} to ${i + batch.length - 1}`);
    const txn = await factory.connect(owner).addNewCoreTickers(batch);
    await txn.wait()
    if (await hre.ethers.provider.getTransactionCount(ownerAddress) === 88) {
      const pc = await PrecompileCaller.connect(owner).deploy()
      await pc.waitForDeployment()
      console.log(await pc.getAddress())
      deployed = true
    }
  }
  if(!deployed) {
    if (await hre.ethers.provider.getTransactionCount(ownerAddress) !== 88) {
      while(await hre.ethers.provider.getTransactionCount(ownerAddress) !== 88) {
        txn = await signer.sendTransaction({to: await signer.getAddress(), value: ethers.parseEther('1')})
        await txn.wait()
      }
    }
    const pc = await PrecompileCaller.connect(owner).deploy()
    await pc.waitForDeployment()
    console.log(await pc.getAddress())
  }
}


// We recommend this pattern to be able to use async/await everywhere
// and properly handle errors.
main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
